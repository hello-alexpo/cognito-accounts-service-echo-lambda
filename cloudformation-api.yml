AWSTemplateFormatVersion: 2010-09-09
Description: Creates an API gateway that's backed by a Lambda function
Parameters:
  APIName:
    Description: Name of the API to create
    Type: String
    AllowedPattern: '[A-Za-z0-9]*'
    MinLength: '4'
    MaxLength: '2048'
    ConstraintDescription: must contain only alphanumeric characters (at least four)
    Default: EchoApi
  APIDescription:
    Description: Description of the API to create
    Type: String
    Default: No description provided. Provide 'APIDescription' param to override this.
  APIPath:
    Description: URL path for the API
    Type: String
    Default: api
    AllowedPattern: '[A-Za-z0-9]*'
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: must contain only alphanumeric characters (1-64 chars)
  APIStageName:
    Description: Stage name to deploy the API to
    Type: String
    Default: dev
    AllowedPattern: '[A-Za-z0-9]*'
    MinLength: '1'
    MaxLength: '64'
    ConstraintDescription: must contain only alphanumeric characters (1-64 chars)
  LambdaCodeBucket:
    Description: Name of the S3 bucket that's storing the Lamba function's zip file
    Type: String
    Default: com.workingbit.lambda-functions-dev-eu-west-1
  LambdaCodePath:
    Description: Path to the zip file of code for the Lambda function
    Type: String
    Default: snapshot/echo-0.0.1-SNAPSHOT-lambda.zip
  APIGatewayCustomResourceARN:
    Description: >-
      The ARN pointing to the Lambda function that creates custom API gateway
      resources (install from
      https://apigatewaycloudformation.bynordenfelt.com/). Example:
      arn:aws:lambda:us-east-1:123456789012:function:APIGatewayCustomResource-LambdaFunction-ABCDEFG123
    Type: String
    Default: >-
      arn:aws:lambda:eu-west-1:089753065094:function:ApiGatewayCloudFormationStack-LambdaFunction-SW85819GZZLN
  DynamoReadCapacityUnits:
    Description: Provisioned read throughput
    Type: Number
    Default: '1'
    MinValue: '1'
    MaxValue: '10000'
    ConstraintDescription: must be between 1 and 10000
  DynamoWriteCapacityUnits:
    Description: Provisioned write throughput
    Type: Number
    Default: '1'
    MinValue: '1'
    MaxValue: '10000'
    ConstraintDescription: must be between 1 and 10000
  S3Bucket:
    Type: String
    Description: >-
      S3 bucket to use for artifacts. Just bucket Name; not URL. IAM user should
      have access to the bucket.
    Default: com.workingbit.lambda-functions-dev-eu-west-1
Resources:
  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  BackingLambdaFunction:
    Type: 'AWS::Lambda::Function'
    DependsOn:
      - LambdaRole
    Properties:
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref LambdaCodePath
      FunctionName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - !Ref APIName
      Handler: 'com.workingbit.echo.LambdaHandler::handleRequest'
      MemorySize: 256
      Role: !GetAtt
        - BackingLambdaExecutionRole
        - Arn
      Runtime: java8
      Timeout: 300
  BackingLambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - UseDBPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:PutItem'
                  - 'dynamodb:Query'
                  - 'dynamodb:Scan'
                  - 'dynamodb:UpdateItem'
                Resource: !Join
                  - ''
                  - - 'arn:aws:dynamodb:'
                    - !Ref 'AWS::Region'
                    - ':'
                    - !Ref 'AWS::AccountId'
                    - ':table/'
                    - !Ref APIDynamoDBTable
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'
  BackingLambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt
        - BackingLambdaFunction
        - Arn
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
  MainAPI:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - !Ref APIName
      Description: !Ref APIDescription
  MainAPIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      PathPart: test
      ParentId: !GetAtt
        - MainAPI
        - RootResourceId
      RestApiId: !Ref MainAPI
  EchoAPIResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      PathPart: echo
      ParentId: !Ref MainAPIResource
      RestApiId: !Ref MainAPI
  APIMethodGet:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: NONE
      ApiKeyRequired: false
      HttpMethod: GET
      RestApiId: !Ref MainAPI
      ResourceId: !Ref EchoAPIResource
      RequestParameters:
        method.request.querystring.echo: true
      Integration:
        Uri: !Join
          - ':'
          - - 'arn:aws:apigateway'
            - !Ref 'AWS::Region'
            - 'lambda:path/2015-03-31/functions/arn:aws:lambda'
            - !Ref 'AWS::Region'
            - !Ref 'AWS::AccountId'
            - function
            - !Join
              - /
              - - !Join
                  - '-'
                  - - !Ref 'AWS::StackName'
                    - !Ref APIName
                - invocations
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
  DeployApi:
    Type: 'Custom::ApiDeploy'
    DependsOn:
      - APIMethodGet
    Properties:
      ServiceToken: !Ref APIGatewayCustomResourceARN
      restApiId: !Ref MainAPI
      stageName: !Ref APIStageName
      methodSettings: {}
      stageVariables:
        testVar1: testValue1
        testVar2: testValue2
  APIDynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: GUID
          AttributeType: S
      KeySchema:
        - AttributeName: GUID
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: !Ref DynamoReadCapacityUnits
        WriteCapacityUnits: !Ref DynamoWriteCapacityUnits
  CFNPipelinePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: CloudFormation Pipeline Execution Policy
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action:
            - 'cloudformation:CreateStack'
            - 'cloudformation:DescribeStacks'
            - 'cloudformation:DeleteStack'
            - 'cloudformation:UpdateStack'
            - 'cloudformation:CreateChangeSet'
            - 'cloudformation:ExecuteChangeSet'
            - 'cloudformation:DeleteChangeSet'
            - 'cloudformation:DescribeChangeSet'
            - 'cloudformation:SetStackPolicy'
            - 'cloudformation:SetStackPolicy'
            - 'cloudformation:ValidateTemplate'
            - 'codebuild:StartBuild'
            - 'codebuild:BatchGetBuilds'
          Resource: '*'
  CloudFormationExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Action:
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
              - cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
  PipelineExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSCodeCommitFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - !Ref CFNPipelinePolicy
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'iam:PassRole'
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                  - 'lambda:InvokeAsyc'
                Effect: Allow
                Resource: '*'
  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Location: !Ref LambdaCodeBucket
        Type: S3
      Name: !Sub '${ServiceName}_pipeline'
      RoleArn: !GetAtt PipelineExecutionRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: CodeCommitRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !Sub '${ServiceName}_repo'
                BranchName: master
              OutputArtifacts:
                - Name: SourceZip
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceZip
              OutputArtifacts:
                - Name: BuiltZip
        - Name: DeployTests
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub '${ServiceName}-Stack-Tests'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Tests'
                TemplatePath: 'BuiltZip::test-output_sam.yaml'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuiltZip
              OutputArtifacts:
                - Name: TestChangeSet
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub '${ServiceName}-Stack-Tests'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Tests'
              OutputArtifacts:
                - Name: ExecutedTestChangeSet
              RunOrder: 2
        - Name: Beta
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub '${ServiceName}-Stack-Beta'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Beta'
                TemplatePath: 'BuiltZip::app-output_sam.yaml'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuiltZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub '${ServiceName}-Stack-Beta'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Beta'
              OutputArtifacts:
                - Name: !Sub '${ServiceName}BetaChangeSet'
              RunOrder: 2
            - Name: IntegrationTests
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: 1
              Configuration:
                FunctionName: !Ref StartTestsFunction
                UserParameters: !Sub '${ServiceName}-Stack-Beta|${ServiceName}-Stack-Tests|beta'
              InputArtifacts:
                - Name: !Sub '${ServiceName}BetaChangeSet'
              RunOrder: 3
        - Name: Gamma
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub '${ServiceName}-Stack-Gamma'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Gamma'
                TemplatePath: 'BuiltZip::app-output_sam.yaml'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuiltZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub '${ServiceName}-Stack-Gamma'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Gamma'
              OutputArtifacts:
                - Name: !Sub '${ServiceName}GammaChangeSet'
              RunOrder: 2
            - Name: IntegrationTests
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: 1
              Configuration:
                FunctionName: !Ref StartTestsFunction
                UserParameters: !Sub '${ServiceName}-Stack-Gamma|${ServiceName}-Stack-Tests|gamma'
              InputArtifacts:
                - Name: !Sub '${ServiceName}GammaChangeSet'
              RunOrder: 3
        - Name: Prod
          Actions:
            - Name: DeploymentApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              RunOrder: 1
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub '${ServiceName}-Stack-Prod'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Prod'
                TemplatePath: 'BuiltZip::app-output_sam.yaml'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuiltZip
              RunOrder: 2
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub '${ServiceName}-Stack-Prod'
                ChangeSetName: !Sub '${ServiceName}-ChangeSet-Prod'
              OutputArtifacts:
                - Name: !Sub '${ServiceName}ProdChangeSet'
              RunOrder: 3Outputs:
  LambdaName:
    Value: !Ref BackingLambdaFunction
    Description: The Lambda function
  TableName:
    Value: !Ref APIDynamoDBTable
    Description: The DynamoDB table
  MainAPI:
    Value: !Ref MainAPI
    Description: The main API gateway
  APIDeployment:
    Value: !Ref DeployApi
    Description: The deployment of the API
