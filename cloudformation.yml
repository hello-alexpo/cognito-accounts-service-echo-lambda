AWSTemplateFormatVersion: 2010-09-09
Description: Cross-Account Pipelines
Parameters:
  S3Bucket:
    Type: String
    Description: >-
      S3 bucket to use for artifacts. Just bucket Name; not URL. IAM user should
      have access to the bucket.
    Default: com.workingbit.lambda-functions-dev-eu-west-1
  S3Key:
    Type: String
    Description: S3 key within S3Bucket.
    Default: aws-codepipeline-s3-aws-codedeploy_linux.zip
  PipelineAWSAccountId:
    Type: String
    NoEcho: 'true'
    Description: AWS Account ID accessing the pipeline
Resources:
  LambdaCodePipelineExecutionPolicy:
    DependsOn:
      - CodePipelineLambdaRole
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: LambdaRolePolicy
      Roles:
        - !Ref CodePipelineLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'logs:*'
            Resource:
              - 'arn:aws:logs:*:*:*'
          - Effect: Allow
            Action:
              - 'codepipeline:PutJobSuccessResult'
              - 'codepipeline:PutJobFailureResult'
            Resource:
              - '*'
  CrossAccountPipelineViewersRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Join
                - ''
                - - 'arn:aws:iam::'
                  - !Ref PipelineAWSAccountId
                  - ':root'
            Action: 'sts:AssumeRole'
      Path: /
  CrossAccountPipelineViewersPolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn:
      - CodePipelineStack
      - CrossAccountPipelineViewersRole
    Properties:
      PolicyName: CrossAccountPipelineViewersPolicy
      Roles:
        - !Ref CrossAccountPipelineViewersRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'codepipeline:GetPipeline'
              - 'codepipeline:GetPipelineState'
              - 'codepipeline:ListActionTypes'
              - 'codepipeline:ListPipelines'
              - 'iam:ListRoles'
              - 's3:GetBucketPolicy'
              - 's3:GetObject'
              - 's3:ListAllMyBuckets'
              - 's3:ListBucket'
              - 'codedeploy:GetApplication'
              - 'codedeploy:GetDeploymentGroup'
              - 'codedeploy:ListApplications'
              - 'codedeploy:ListDeploymentGroups'
              - 'elasticbeanstalk:DescribeApplications'
              - 'elasticbeanstalk:DescribeEnvironments'
              - 'lambda:GetFunctionConfiguration'
              - 'lambda:ListFunctions'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:codepipeline:'
                  - !Ref 'AWS::Region'
                  - ':'
                  - !Ref 'AWS::AccountId'
                  - ':'
                  - !Ref CodePipelineStack
  CodePipelineLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  CodePipelineLambdaEcho:
    Type: 'AWS::Lambda::Function'
    DependsOn:
      - CodePipelineLambdaRole
      - LambdaCodePipelineExecutionPolicy
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: snapshot/echo-0.0.1-SNAPSHOT-lambda.zip
      Role: !GetAtt
        - CodePipelineLambdaRole
        - Arn
      Description: Returns echo
      Timeout: 300
      Handler: com.workingbit.echo.LambdaHandler::handleRequest
      Runtime: java8
      MemorySize: 256
  CodePipelineStack:
    Type: 'AWS::CodePipeline::Pipeline'
    DependsOn:
      - CodePipelineLambdaEcho
    Properties:
      RoleArn: !Join
        - ''
        - - 'arn:aws:iam::'
          - !Ref 'AWS::AccountId'
          - ':role/AWS-CodePipeline-Service'
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: S3
              OutputArtifacts:
                - Name: Echo
              Configuration:
                S3Bucket: !Ref S3Bucket
                S3ObjectKey: !Ref S3Key
              RunOrder: 1
        - Name: Commit
          Actions:
            - InputArtifacts: []
              Name: IAMPermissions
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: '1'
                Provider: Lambda
              OutputArtifacts: []
              Configuration:
                FunctionName: !Ref CodePipelineLambdaEcho
                UserParameters: !Ref 'AWS::StackName'
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
Outputs:
  StackName:
    Value: !Ref 'AWS::StackName'
  CodePipelineURL:
    Value: !Join
      - ''
      - - 'https://console.aws.amazon.com/codepipeline/home?region='
        - !Ref 'AWS::Region'
        - '#/view/'
        - !Ref CodePipelineStack
  CrossAcccountIAMRole:
    Value: !Join
      - ''
      - - 'https://console.aws.amazon.com/iam/home?region='
        - !Ref 'AWS::Region'
        - '#roles/'
        - !Ref CrossAccountPipelineViewersRole
  LambdaFunctionName:
    Value: !Ref CodePipelineLambdaEcho
